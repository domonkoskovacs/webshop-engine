server:
  port: 8080
  ssl:
    enabled: false
spring:
  security:
    admin:
      username: ${ADMIN_USERNAME:admin}
      password: ${ADMIN_PASSWORD:admin}
    monitoring:
      username: ${MONITORING_USERNAME:monitoring}
      password: ${MONITORING_PASSWORD:monitoring}
    swagger:
      username: ${API_USERNAME:swagger}
      password: ${API_PASSWORD:swagger}
    cors:
      enabled:
        paths:
          - "http://localhost:3000"
          - "http://localhost:5173"
  application:
    name: webshop-be-service
  mail:
    port: 1025
    host: ${SMTP_HOST:0.0.0.0}
    properties:
      mail:
        smtp:
          auth: false
          starttls:
            enable: false
            required: false
  liquibase:
    enabled: true
    change-log: classpath:db/changelog-app.xml
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/webshop
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    hikari:
      connection-test-query: SELECT 1
      maximum-pool-size: ${DB_POOL_SIZE:4}
      catalog: ${DB_CATALOG:spring_webshop}
  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: false
    properties:
      hibernate:
        format_sql: true
  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 10MB

management:
  endpoint:
    prometheus:
      access: unrestricted
  endpoints:
    web:
      exposure:
        include: "*"

application:
  jwt:
    expiration: 900000
    refresh-expiration: 1209600000
    accessSecret: ${JWT_ACCESS_SECRET:generate}
    refreshSecret: ${JWT_REFRESH_SECRET:generate}
  email:
    new-password: http://localhost:5173/new-password?id={id}
    verify: http://localhost:5173/verify-email/confirm?id={id}
    more-info: http://localhost:5173/my-orders
    unsubscribe: http://localhost:5173/unsubscribe?id={id}
    from: noreply@${WEBSHOP_NAME:webshop}.hu
  image:
    folder-name: images
    server-domain: ${SERVER_HOST:localhost}
    storage-type: MINIO
    minio:
      endpoint: ${MINIO_ENDPOINT:http://localhost:9000}
      accessKey: ${MINIO_ACCESS_KEY:minioadmin}
      secretKey: ${MINIO_SECRET_KEY:minioadmin}
      bucket: images
  payment:
    private-key: ${STRIPE_PRIVATE_KEY:MUST_BE_SPECIFIED}
    endpoint-secret: ${ENDPOINT_SECRET:MUST_BE_SPECIFIED}
    demo-mode: true
  schedule:
    out-of-stock-product:
      cron: "* 0 0 * * *" #every midnight
    recurring-email:
      cron: "* 0 14 * * 4" #every thursday 14:00
    promotion-email:
      cron: "* 0,30 * * * *" # every 30 minutes
    unpaid-orders:
      cron: "* 0 * * * *"
    complete-orders:
      cron: "* 0 * * * *"